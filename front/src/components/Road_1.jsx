/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/assets/models/Road_1.glb -o src/components/Road_1.jsx -r public/ 
*/
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { useTrimesh } from "@react-three/cannon";
import { useLoader } from "@react-three/fiber";
import { GLTFLoader } from "three/examples/jsm/loaders/GLTFLoader";

export function Road_1(props) {
  const { nodes, materials } = useGLTF('/assets/models/Road_1.glb')
  const geometry = nodes.Scene.children[0].geometry;
  const vertices = geometry.attributes.position.array;
  const indices  = geometry.index.array;
  console.log(nodes)
  console.log(geometry)
  const [ref] = useTrimesh(
    () => ({
      args: [vertices, indices],
      mass: 0,
      type: "Static",
    }),
    useRef(null)
  )

  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Road_1.geometry} material={materials.Asphalt} rotation={[Math.PI / 2, 0, 0]} scale={0.01} />
    </group>
  )
}

useGLTF.preload('/assets/models/Road_1.glb')
